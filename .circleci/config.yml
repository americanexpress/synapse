# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
jobs:
  # Build, Test, and Deploy
  build-test-job:
    docker:
      - image: circleci/openjdk:11-jdk-stretch
    steps:
      - checkout
      - restore_cache:
          key: synapse-{{ checksum "pom.xml" }}
      - run: mvn -B clean package -DskipTests
      - save_cache: # saves the project dependencies
          paths:
            - ~/.m2
          key: synapse-{{ checksum "pom.xml" }}
      - run: mvn clean install -DskipTests
      - run: mvn test
      - store_test_results: # We use this timing data to optimize the future runs
          path: target/surefire-reports
  #      - run: mvn --settings ".circleci/settings.xml" -DskipTests deploy -P release

  # Test
  test-job:
    parallelism: 2 # parallel containers to split the tests among
    docker:
      - image: circleci/openjdk:11-jdk-stretch
    steps:
      - checkout
      - run: mvn test
      - store_test_results: # We use this timing data to optimize the future runs
          path: target/surefire-reports

  # SNAPSHOT Deploy to Maven Central
  snapshot-maven-central-deploy-job:
    docker:
      - image: circleci/openjdk:11-jdk-stretch
    steps:
      - checkout
      - run: mvn --settings ".circleci/settings.xml" -DskipTests clean deploy

  # RELEASE Deploy to Maven Central
  release-maven-central-deploy-job:
    docker:
      - image: circleci/openjdk:11-jdk-stretch
    steps:
      - checkout
      #      - run: mvn --settings ".circleci/settings.xml" release:clean release:prepare release:perform -DgenerateBackupPoms=false -Dtag=synapse-1.0.0-RELEASE -DreleaseVersion=1.0.0-RELEASE -DdevelopmentVersion=1.0.0-SNAPSHOT
      #      - run: mvn release:perform
     # - run: mvn --settings ".circleci/settings.xml" -DskipTests clean deploy -P release
      - run: mvn --settings ".circleci/settings.xml" -B release:clean release:prepare release:perform -P release -Darguments=-Dgpg.passphrase=${ORG_GRADLE_PROJECT_signingKey_base64}


  # SNAPSHOT to RELEASE Deploy to Maven Central
  snapshot-release-maven-central-deploy-job:
    docker:
      - image: circleci/openjdk:11-jdk-stretch
    steps:
      - checkout
      - run: mvn --settings ".circleci/settings.xml" -B release:clean release:prepare release:perform -P release -Darguments=-Dgpg.passphrase=${ORG_GRADLE_PROJECT_signingKey_base64}

  # Deploy to American Express
  american-express-deploy-job:
    docker:
      - image: circleci/openjdk:11-jdk-stretch
    steps:
      - checkout
      - run: mvn --settings ".circleci/settings.xml" -DskipTests deploy -P americanexpress

# Workflows that will schedule and execute jobs.
workflows:
  # This workflow is to start automatically when creating any new feature branches and when pushing any changes to feature or develop branches
  snapshot-maven-central-build-test-deploy-workflow:
    jobs:
      - build-test-job:
          filters:
            branches:
              only:
                - develop
                - /feature.*/
      - snapshot-maven-central-deploy-job:
          filters:
            branches:
              only:
                - develop
                - /feature.*/
          context: maven_central_credentials
          requires:
            - build-test-job

  # This workflow is to start automatically when merging any changes to the main branch
  release-maven-central-build-test-deploy-workflow:
    jobs:
      - build-test-job:
          filters:
            branches:
              only:
                - main
      - release-maven-central-deploy-job:
          filters:
            branches:
              only:
                - main
          context: maven_central_credentials
          requires:
            - build-test-job

  # This workflow is to start automatically when creating any new release branches and when pushing any changes to release branches
  snapshot-release-maven-central-build-test-deploy-workflow:
    jobs:
      - build-test-job:
          filters:
            branches:
              only:
                - release.*/
      - snapshot-release-maven-central-deploy-job:
          filters:
            branches:
              only:
                - release.*/
          context: maven_central_credentials
          requires:
            - build-test-job

#  american-express-build-test-deploy-workflow:
#    jobs:
#      - build-test-job
#      - american-express-deploy-job:
#          context: gradle
#          requires:
#            - build-test-job
