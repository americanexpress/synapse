"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[281],{4828:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var r=t(4848),a=t(5680);const o={},s="synapse-data-postgres",i={id:"data/synapse-data-postgres",title:"synapse-data-postgres",description:"Description",source:"@site/real_docs/data/synapse-data-postgres.md",sourceDirName:"data",slug:"/data/synapse-data-postgres",permalink:"/synapse/docs/data/synapse-data-postgres",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"synapse-data-couchbase",permalink:"/synapse/docs/data/synapse-data-couchbase"},next:{title:"synapse-framework-api-docs",permalink:"/synapse/docs/framework/synapse-framework-api-docs"}},c={},l=[{value:"Description",id:"description",level:2},{value:"Usage",id:"usage",level:2}];function p(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.RP)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"synapse-data-postgres",children:"synapse-data-postgres"}),"\n",(0,r.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"This is the synapse data relational database abstraction framework used whenever there is a need to connect to\npostgres database. It provides several out-of-the-box functionalities like:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"An open to extension base configuration java file open to extension that provides the connection logic to connect\nto any relational database and create a hikari connection pool. The connection parameters will be provided by\nproperty files on the modules using this module."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Open to extension property files with the default following values:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"An open to extension connection pool default parameters. - An open to extension H2 connection parameters for\nlocal property file. - An open to extens4ion H2 initialization parameters for local property file. - An open\nto extension any relational database initialization parameters for three extra environments(E1, E2 and E3)."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"An open to extension BaseEntity that contains the key identifier with a default(open to extension also)\nGenerationType.IDENTITY and the common auditing fields maintained by the Spring Data framework itself (createdBy,\nlastModifiedBy, createdDate, lastModifiedDate and version)."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"To utilize this module, add the following dependency to the pom.xml file:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"        <dependency>\n            <groupId>com.americanexpress</groupId>\n            <artifactId>synapse-data-postgres</artifactId>\n            <version>0.3.0-SNAPSHOT</version>\n        </dependency>\n"})})]})}function d(e={}){const{wrapper:n}={...(0,a.RP)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},5680:(e,n,t)=>{t.d(n,{RP:()=>l});var r=t(6540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=l(t),f=a,h=u["".concat(c,".").concat(f)]||u[f]||p[f]||o;return t?r.createElement(h,s(s({ref:n},d),{},{components:t})):r.createElement(h,s({ref:n},d))}));d.displayName="MDXCreateElement"}}]);