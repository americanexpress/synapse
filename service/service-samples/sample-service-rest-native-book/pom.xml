<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright 2020 American Express Travel Related Services Company, Inc.

    Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
    in compliance with the License. You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software distributed under the License
    is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
    or implied. See the License for the specific language governing permissions and limitations under
    the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>io.americanexpress.synapse</groupId>
        <artifactId>service-samples</artifactId>
        <version>0.3.21-SNAPSHOT</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <artifactId>sample-service-rest-native-book</artifactId>

    <properties>
        <!-- This property is needed to prevent a conflict between various build plugins -->
        <classifier/>

        <!-- Specify main class to allow your native-image-maven-plugin to find it -->
        <main.class>io.americanexpress.service.book.io.americanexpress.service.book.rest.BookApplication</main.class>

        <!-- This specifies the build pack to be used in your generated cloud image. -->
        <!-- Valid options are tiny, base, full -->
        <builder>paketobuildpacks/builder:base</builder>

        <!-- You can add additional native build arguments with this property -->
        <native.build.args/>
    </properties>
    <!--Dependencies-->
    <dependencies>
        <!--Synapse-->
<!--        <dependency>-->
<!--            <groupId>io.americanexpress.synapse</groupId>-->
<!--            <artifactId>synapse-service-rest</artifactId>-->
<!--        </dependency>-->
        <dependency>
            <groupId>org.springframework.experimental</groupId>
            <artifactId>spring-aot</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-function-web</artifactId>
            <version>3.2.7</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.experimental</groupId>
            <artifactId>spring-native</artifactId>
            <version>0.12.1</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-dependencies</artifactId>
            <version>2021.0.4</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!--Build Docker Image-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <classifier>exec</classifier>
                    <image>
                        <builder>${builder}</builder>
                        <env>
                            <BP_NATIVE_IMAGE>true</BP_NATIVE_IMAGE>
                            <BP_NATIVE_IMAGE_BUILD_ARGUMENTS>${native.build.args}</BP_NATIVE_IMAGE_BUILD_ARGUMENTS>
                        </env>
                    </image>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.experimental</groupId>
                <artifactId>spring-aot-maven-plugin</artifactId>
                <configuration>
                    <removeSpelSupport>true</removeSpelSupport>
                    <removeXmlSupport>true</removeXmlSupport>
                </configuration>
                <executions>
                    <execution>
                        <id>test-generate</id>
                        <goals>
                            <goal>test-generate</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>generate</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.graalvm.nativeimage</groupId>
                <artifactId>native-image-maven-plugin</artifactId>
                <configuration>
                    <mainClass>${main.class}</mainClass>
                    <imageName>${project.artifactId}</imageName>
                    <buildArgs>${native.build.args}</buildArgs>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>native-image</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>

